<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üßÆ ‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏´‡∏≤‡∏Ñ.‡∏£.‡∏ô. - ‡∏õ.6</title>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+Thai:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        body {
            box-sizing: border-box;
            font-family: 'Noto Sans Thai', sans-serif;
            margin: 0;
            padding: 0;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100%;
            position: relative;
        }

        html {
            height: 100%;
        }

        .container {
            max-width: 1000px;
            margin: 0 auto;
            padding: 20px;
            min-height: 100%;
        }

        .header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 30px;
            text-align: center;
            margin-bottom: 30px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
            border: 1px solid rgba(255, 255, 255, 0.3);
        }

        .logo {
            font-size: 4em;
            margin-bottom: 15px;
            animation: bounce 2s infinite;
        }

        @keyframes bounce {
            0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
            40% { transform: translateY(-10px); }
            60% { transform: translateY(-5px); }
        }

        .header h1 {
            color: #2d3436;
            margin: 0 0 10px 0;
            font-size: 2.5em;
            font-weight: 700;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
        }

        .header p {
            color: #636e72;
            margin: 5px 0;
            font-size: 1.2em;
        }

        .section {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
            border: 1px solid rgba(255, 255, 255, 0.3);
        }

        .input-group {
            margin: 20px 0;
        }

        .input-group label {
            display: block;
            margin-bottom: 10px;
            font-weight: 600;
            color: #2d3436;
            font-size: 1.1em;
        }

        .input-group input {
            width: 100%;
            padding: 15px 20px;
            border: 2px solid #ddd;
            border-radius: 12px;
            font-size: 1.1em;
            font-family: 'Noto Sans Thai', sans-serif;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.9);
        }

        .input-group input:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.2);
            transform: translateY(-2px);
        }

        .btn {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 15px;
            font-size: 1.2em;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
            margin: 10px;
            font-family: 'Noto Sans Thai', sans-serif;
            text-transform: none;
        }

        .btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.6);
        }

        .btn:active {
            transform: translateY(-1px);
        }

        .btn-success {
            background: linear-gradient(135deg, #00b894, #00a085);
            box-shadow: 0 5px 15px rgba(0, 184, 148, 0.4);
        }

        .btn-success:hover {
            box-shadow: 0 8px 25px rgba(0, 184, 148, 0.6);
        }

        .btn-warning {
            background: linear-gradient(135deg, #fdcb6e, #e17055);
            box-shadow: 0 5px 15px rgba(253, 203, 110, 0.4);
        }

        .btn-warning:hover {
            box-shadow: 0 8px 25px rgba(253, 203, 110, 0.6);
        }

        .question-card {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 30px;
            margin-bottom: 25px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.3);
            transition: all 0.3s ease;
        }

        .question-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 12px 35px rgba(0, 0, 0, 0.15);
        }

        .question-number {
            background: linear-gradient(135deg, #fd79a8, #e84393);
            color: white;
            padding: 10px 20px;
            border-radius: 25px;
            font-weight: 600;
            display: inline-block;
            margin-bottom: 20px;
            font-size: 1.1em;
        }

        .question-text {
            font-size: 1.4em;
            font-weight: 600;
            color: #2d3436;
            margin-bottom: 25px;
            line-height: 1.6;
        }

        .options {
            display: grid;
            gap: 15px;
        }

        .option {
            background: rgba(255, 255, 255, 0.8);
            border: 2px solid #e9ecef;
            border-radius: 15px;
            padding: 18px 25px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 1.1em;
            font-weight: 500;
        }

        .option:hover {
            background: rgba(102, 126, 234, 0.1);
            border-color: #667eea;
            transform: translateX(5px);
        }

        .option.selected {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border-color: #667eea;
            transform: scale(1.02);
        }

        .option.correct {
            background: linear-gradient(135deg, #00b894, #00a085);
            color: white;
            border-color: #00a085;
        }

        .option.incorrect {
            background: linear-gradient(135deg, #e17055, #d63031);
            color: white;
            border-color: #d63031;
        }

        .progress-container {
            background: rgba(255, 255, 255, 0.3);
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 30px;
            text-align: center;
        }

        .progress-bar {
            background: rgba(255, 255, 255, 0.5);
            border-radius: 10px;
            height: 20px;
            margin: 15px 0;
            overflow: hidden;
            position: relative;
        }

        .progress-fill {
            background: linear-gradient(135deg, #00b894, #00a085);
            height: 100%;
            border-radius: 10px;
            transition: width 0.5s ease;
            position: relative;
        }

        .progress-fill::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.3), transparent);
            animation: shimmer 2s ease-in-out infinite;
        }

        @keyframes shimmer {
            0% { transform: translateX(-100%); }
            100% { transform: translateX(100%); }
        }

        .score-card {
            background: linear-gradient(135deg, #00b894, #00a085);
            color: white;
            border-radius: 20px;
            padding: 30px;
            text-align: center;
            margin: 25px 0;
            box-shadow: 0 10px 30px rgba(0, 184, 148, 0.3);
        }

        .score-number {
            font-size: 4em;
            font-weight: 700;
            margin: 15px 0;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
        }

        .explanation {
            background: rgba(102, 126, 234, 0.1);
            border-left: 5px solid #667eea;
            padding: 20px;
            margin: 20px 0;
            border-radius: 10px;
            font-size: 1.1em;
            line-height: 1.6;
        }

        .explanation h4 {
            color: #667eea;
            margin: 0 0 10px 0;
            font-size: 1.2em;
        }

        .hidden {
            display: none !important;
        }

        .scoreboard-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            overflow: hidden;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .scoreboard-table th,
        .scoreboard-table td {
            padding: 15px;
            text-align: center;
            border-bottom: 1px solid rgba(0, 0, 0, 0.1);
        }

        .scoreboard-table th {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            font-weight: 600;
            font-size: 1.1em;
        }

        .scoreboard-table tr:hover {
            background: rgba(102, 126, 234, 0.1);
        }

        .rank-badge {
            display: inline-block;
            padding: 5px 12px;
            border-radius: 20px;
            font-weight: 600;
            font-size: 0.9em;
        }

        .rank-1 { background: linear-gradient(135deg, #ffd700, #ffed4e); color: #2d3436; }
        .rank-2 { background: linear-gradient(135deg, #c0c0c0, #e8e8e8); color: #2d3436; }
        .rank-3 { background: linear-gradient(135deg, #cd7f32, #d4a574); color: white; }
        .rank-other { background: linear-gradient(135deg, #74b9ff, #0984e3); color: white; }

        .loading {
            text-align: center;
            padding: 40px;
            font-size: 1.2em;
            color: #667eea;
        }

        .spinner {
            border: 4px solid rgba(102, 126, 234, 0.3);
            border-radius: 50%;
            border-top: 4px solid #667eea;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 20px auto;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @media (max-width: 768px) {
            .container {
                padding: 15px;
            }
            
            .header h1 {
                font-size: 2em;
            }
            
            .question-text {
                font-size: 1.2em;
            }
            
            .score-number {
                font-size: 3em;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å - ‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠ -->
        <div id="loginSection">
            <div class="header">
                <div class="logo">üßÆ</div>
                <h1>‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏´‡∏≤‡∏Ñ.‡∏£.‡∏ô.</h1>
                <p><strong>‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏£‡∏∞‡∏ñ‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏õ‡∏µ‡∏ó‡∏µ‡πà 6</strong></p>
                <p>üìö ‡∏ß‡∏¥‡∏ä‡∏≤‡∏Ñ‡∏ì‡∏¥‡∏ï‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå | ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô 20 ‡∏Ç‡πâ‡∏≠ | ‡∏Ç‡πâ‡∏≠‡∏•‡∏∞ 2 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô</p>
            </div>
            
            <div class="section">
                <div style="text-align: center;">
                    <div class="input-group" style="max-width: 400px; margin: 0 auto;">
                        <label for="studentName">üë§ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•:</label>
                        <input type="text" id="studentName" placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ" required>
                    </div>
                    
                    <button class="btn btn-success" onclick="startTest()">üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö</button>
                    <button class="btn btn-warning" onclick="showScoreboard()">üìä ‡∏î‡∏π‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô</button>
                </div>
            </div>
        </div>

        <!-- ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö -->
        <div id="testSection" class="hidden">
            <div class="header">
                <div class="logo">üìù</div>
                <h1>‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏´‡∏≤‡∏Ñ.‡∏£.‡∏ô.</h1>
                <p>‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö: <span id="testStudentName"></span></p>
            </div>

            <div class="progress-container">
                <h3>üìà ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤</h3>
                <div class="progress-bar">
                    <div class="progress-fill" id="progressFill" style="width: 0%"></div>
                </div>
                <p id="progressText">‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà 1 ‡∏à‡∏≤‡∏Å 20</p>
            </div>
            
            <div id="questionContainer"></div>
            
            <div style="text-align: center; margin-top: 30px;">
                <button class="btn" onclick="showLogin()">üè† ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</button>
            </div>
        </div>

        <!-- ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô -->
        <div id="scoreboardSection" class="hidden">
            <div class="header">
                <div class="logo">üèÜ</div>
                <h1>‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô</h1>
                <p>üìä ‡∏ú‡∏•‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏≠‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</p>
            </div>

            <div class="section">
                <div id="scoreboardContent">
                    <div class="loading">
                        <div class="spinner"></div>
                        <p>üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheets...</p>
                    </div>
                </div>
            </div>
            
            <div style="text-align: center; margin-top: 30px;">
                <button class="btn btn-warning" onclick="loadScoreboard()">üîÑ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</button>
                <button class="btn" onclick="showLogin()">üè† ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å</button>
            </div>
        </div>
    </div>

    <script>
        // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö 20 ‡∏Ç‡πâ‡∏≠
        const questions = [
            {
                question: "‡∏Ñ.‡∏£.‡∏ô. ‡∏¢‡πà‡∏≠‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤‡∏≠‡∏∞‡πÑ‡∏£?",
                options: ["‡∏ï‡∏±‡∏ß‡∏Ñ‡∏π‡∏ì‡∏£‡πà‡∏ß‡∏°‡∏ô‡πâ‡∏≠‡∏¢", "‡∏ï‡∏±‡∏ß‡∏´‡∏≤‡∏£‡∏£‡πà‡∏ß‡∏°‡∏°‡∏≤‡∏Å", "‡∏ï‡∏±‡∏ß‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏£‡πà‡∏ß‡∏°", "‡∏ï‡∏±‡∏ß‡∏Ñ‡∏π‡∏ì‡∏£‡πà‡∏ß‡∏°‡∏°‡∏≤‡∏Å"],
                correct: 0,
                explanation: "‡∏Ñ.‡∏£.‡∏ô. ‡∏¢‡πà‡∏≠‡∏°‡∏≤‡∏à‡∏≤‡∏Å '‡∏ï‡∏±‡∏ß‡∏Ñ‡∏π‡∏ì‡∏£‡πà‡∏ß‡∏°‡∏ô‡πâ‡∏≠‡∏¢' (Least Common Multiple: LCM) ‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ï‡πá‡∏°‡∏ö‡∏ß‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏´‡∏≤‡∏£‡∏î‡πâ‡∏ß‡∏¢‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏•‡∏á‡∏ï‡∏±‡∏ß‡∏ó‡∏∏‡∏Å‡∏ï‡∏±‡∏ß"
            },
            {
                question: "‡∏Ñ.‡∏£.‡∏ô.‡∏Ç‡∏≠‡∏á 4 ‡πÅ‡∏•‡∏∞ 6 ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏£?",
                options: ["10", "12", "24", "8"],
                correct: 1,
                explanation: "4 = 2¬≤ ‡πÅ‡∏•‡∏∞ 6 = 2√ó3 ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô ‡∏Ñ.‡∏£.‡∏ô. = 2¬≤√ó3 = 4√ó3 = 12 ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏ß‡∏µ‡∏Ñ‡∏π‡∏ì: 4, 8, 12, 16... ‡πÅ‡∏•‡∏∞ 6, 12, 18... ‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô‡∏Ñ‡∏∑‡∏≠ 12"
            },
            {
                question: "‡∏Ñ.‡∏£.‡∏ô.‡∏Ç‡∏≠‡∏á 3 ‡πÅ‡∏•‡∏∞ 5 ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏£?",
                options: ["8", "15", "10", "12"],
                correct: 1,
                explanation: "‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å 3 ‡πÅ‡∏•‡∏∞ 5 ‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô ‡∏Ñ.‡∏£.‡∏ô. = 3√ó5 = 15"
            },
            {
                question: "‡∏Ñ.‡∏£.‡∏ô.‡∏Ç‡∏≠‡∏á 2 ‡πÅ‡∏•‡∏∞ 8 ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏£?",
                options: ["16", "10", "8", "4"],
                correct: 2,
                explanation: "‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å 8 ‡∏´‡∏≤‡∏£‡∏î‡πâ‡∏ß‡∏¢ 2 ‡∏•‡∏á‡∏ï‡∏±‡∏ß (8 = 2√ó4) ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô ‡∏Ñ.‡∏£.‡∏ô.‡∏Ç‡∏≠‡∏á 2 ‡πÅ‡∏•‡∏∞ 8 ‡∏Ñ‡∏∑‡∏≠ 8 (‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡πÉ‡∏´‡∏ç‡πà‡∏Å‡∏ß‡πà‡∏≤)"
            },
            {
                question: "‡∏Ñ.‡∏£.‡∏ô.‡∏Ç‡∏≠‡∏á 6 ‡πÅ‡∏•‡∏∞ 9 ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏£?",
                options: ["15", "18", "12", "24"],
                correct: 1,
                explanation: "6 = 2√ó3 ‡πÅ‡∏•‡∏∞ 9 = 3¬≤ ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô ‡∏Ñ.‡∏£.‡∏ô. = 2√ó3¬≤ = 2√ó9 = 18"
            },
            {
                question: "‡∏Ñ.‡∏£.‡∏ô.‡∏Ç‡∏≠‡∏á 10 ‡πÅ‡∏•‡∏∞ 15 ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏£?",
                options: ["25", "30", "20", "45"],
                correct: 1,
                explanation: "10 = 2√ó5 ‡πÅ‡∏•‡∏∞ 15 = 3√ó5 ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô ‡∏Ñ.‡∏£.‡∏ô. = 2√ó3√ó5 = 30"
            },
            {
                question: "‡∏Ñ.‡∏£.‡∏ô.‡∏Ç‡∏≠‡∏á 7 ‡πÅ‡∏•‡∏∞ 14 ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏£?",
                options: ["21", "14", "28", "7"],
                correct: 1,
                explanation: "‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å 14 ‡∏´‡∏≤‡∏£‡∏î‡πâ‡∏ß‡∏¢ 7 ‡∏•‡∏á‡∏ï‡∏±‡∏ß (14 = 7√ó2) ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô ‡∏Ñ.‡∏£.‡∏ô.‡∏Ç‡∏≠‡∏á 7 ‡πÅ‡∏•‡∏∞ 14 ‡∏Ñ‡∏∑‡∏≠ 14"
            },
            {
                question: "‡∏Ñ.‡∏£.‡∏ô.‡∏Ç‡∏≠‡∏á 12 ‡πÅ‡∏•‡∏∞ 16 ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏£?",
                options: ["24", "48", "32", "28"],
                correct: 1,
                explanation: "12 = 2¬≤√ó3 ‡πÅ‡∏•‡∏∞ 16 = 2‚Å¥ ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô ‡∏Ñ.‡∏£.‡∏ô. = 2‚Å¥√ó3 = 16√ó3 = 48"
            },
            {
                question: "‡∏Ñ.‡∏£.‡∏ô.‡∏Ç‡∏≠‡∏á 5 ‡πÅ‡∏•‡∏∞ 7 ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏£?",
                options: ["12", "35", "25", "14"],
                correct: 1,
                explanation: "‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å 5 ‡πÅ‡∏•‡∏∞ 7 ‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô ‡∏Ñ.‡∏£.‡∏ô. = 5√ó7 = 35"
            },
            {
                question: "‡∏Ñ.‡∏£.‡∏ô.‡∏Ç‡∏≠‡∏á 8 ‡πÅ‡∏•‡∏∞ 12 ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏£?",
                options: ["20", "24", "16", "32"],
                correct: 1,
                explanation: "8 = 2¬≥ ‡πÅ‡∏•‡∏∞ 12 = 2¬≤√ó3 ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô ‡∏Ñ.‡∏£.‡∏ô. = 2¬≥√ó3 = 8√ó3 = 24"
            },
            {
                question: "‡∏Ñ.‡∏£.‡∏ô.‡∏Ç‡∏≠‡∏á 9 ‡πÅ‡∏•‡∏∞ 12 ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏£?",
                options: ["18", "36", "24", "21"],
                correct: 1,
                explanation: "9 = 3¬≤ ‡πÅ‡∏•‡∏∞ 12 = 2¬≤√ó3 ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô ‡∏Ñ.‡∏£.‡∏ô. = 2¬≤√ó3¬≤ = 4√ó9 = 36"
            },
            {
                question: "‡∏Ñ.‡∏£.‡∏ô.‡∏Ç‡∏≠‡∏á 6 ‡πÅ‡∏•‡∏∞ 8 ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏£?",
                options: ["14", "24", "16", "18"],
                correct: 1,
                explanation: "6 = 2√ó3 ‡πÅ‡∏•‡∏∞ 8 = 2¬≥ ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô ‡∏Ñ.‡∏£.‡∏ô. = 2¬≥√ó3 = 8√ó3 = 24"
            },
            {
                question: "‡∏Ñ.‡∏£.‡∏ô.‡∏Ç‡∏≠‡∏á 15 ‡πÅ‡∏•‡∏∞ 20 ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏£?",
                options: ["35", "60", "30", "40"],
                correct: 1,
                explanation: "15 = 3√ó5 ‡πÅ‡∏•‡∏∞ 20 = 2¬≤√ó5 ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô ‡∏Ñ.‡∏£.‡∏ô. = 2¬≤√ó3√ó5 = 4√ó3√ó5 = 60"
            },
            {
                question: "‡∏Ñ.‡∏£.‡∏ô.‡∏Ç‡∏≠‡∏á 4 ‡πÅ‡∏•‡∏∞ 10 ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏£?",
                options: ["14", "20", "40", "8"],
                correct: 1,
                explanation: "4 = 2¬≤ ‡πÅ‡∏•‡∏∞ 10 = 2√ó5 ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô ‡∏Ñ.‡∏£.‡∏ô. = 2¬≤√ó5 = 4√ó5 = 20"
            },
            {
                question: "‡∏Ñ.‡∏£.‡∏ô.‡∏Ç‡∏≠‡∏á 6, 8, 12 ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏£?",
                options: ["24", "48", "36", "72"],
                correct: 0,
                explanation: "6 = 2√ó3, 8 = 2¬≥, 12 = 2¬≤√ó3 ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô ‡∏Ñ.‡∏£.‡∏ô. = 2¬≥√ó3 = 8√ó3 = 24"
            },
            {
                question: "‡∏Ñ.‡∏£.‡∏ô.‡∏Ç‡∏≠‡∏á 3, 4, 6 ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏£?",
                options: ["12", "24", "18", "36"],
                correct: 0,
                explanation: "3 = 3, 4 = 2¬≤, 6 = 2√ó3 ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô ‡∏Ñ.‡∏£.‡∏ô. = 2¬≤√ó3 = 4√ó3 = 12"
            },
            {
                question: "‡∏Ñ.‡∏£.‡∏ô.‡∏Ç‡∏≠‡∏á 18 ‡πÅ‡∏•‡∏∞ 24 ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏£?",
                options: ["42", "72", "36", "48"],
                correct: 1,
                explanation: "18 = 2√ó3¬≤ ‡πÅ‡∏•‡∏∞ 24 = 2¬≥√ó3 ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô ‡∏Ñ.‡∏£.‡∏ô. = 2¬≥√ó3¬≤ = 8√ó9 = 72"
            },
            {
                question: "‡∏Ñ.‡∏£.‡∏ô.‡∏Ç‡∏≠‡∏á 14 ‡πÅ‡∏•‡∏∞ 21 ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏£?",
                options: ["35", "42", "28", "63"],
                correct: 1,
                explanation: "14 = 2√ó7 ‡πÅ‡∏•‡∏∞ 21 = 3√ó7 ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô ‡∏Ñ.‡∏£.‡∏ô. = 2√ó3√ó7 = 42"
            },
            {
                question: "‡∏Ñ.‡∏£.‡∏ô.‡∏Ç‡∏≠‡∏á 25 ‡πÅ‡∏•‡∏∞ 30 ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏£?",
                options: ["55", "150", "75", "100"],
                correct: 1,
                explanation: "25 = 5¬≤ ‡πÅ‡∏•‡∏∞ 30 = 2√ó3√ó5 ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô ‡∏Ñ.‡∏£.‡∏ô. = 2√ó3√ó5¬≤ = 2√ó3√ó25 = 150"
            },
            {
                question: "‡∏Ñ.‡∏£.‡∏ô.‡∏Ç‡∏≠‡∏á 16 ‡πÅ‡∏•‡∏∞ 20 ‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ö‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏£?",
                options: ["36", "80", "40", "60"],
                correct: 1,
                explanation: "16 = 2‚Å¥ ‡πÅ‡∏•‡∏∞ 20 = 2¬≤√ó5 ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô ‡∏Ñ.‡∏£.‡∏ô. = 2‚Å¥√ó5 = 16√ó5 = 80"
            }
        ];

        // ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
        let currentStudent = '';
        let currentQuestionIndex = 0;
        let userAnswers = [];
        let score = 0;
        let testStartTime = null;

        // Google Sheets Configuration
        const SHEET_ID = '1G-QkDc-cKEui2w-jzfga1IuE0EhbBzXcljeTfoPlQzw';
        const APPS_SCRIPT_URL = `https://script.google.com/macros/s/AKfycbwms5iXFnWCN3O9O8UIfCFHANtGb4wccQJ1m_apgVmhPcu1-vkz-AgiK6xc4D36A5da/exec`;

        // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
        function startTest() {
            const name = document.getElementById('studentName').value.trim();
            if (!name) {
                Swal.fire({
                    icon: 'warning',
                    title: '‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠',
                    text: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
                    confirmButtonColor: '#667eea'
                });
                return;
            }
            
            currentStudent = name;
            document.getElementById('testStudentName').textContent = currentStudent;
            
            // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            currentQuestionIndex = 0;
            userAnswers = [];
            score = 0;
            testStartTime = new Date();
            
            showSection('test');
            showQuestion();
        }

        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
        function showQuestion() {
            if (currentQuestionIndex >= questions.length) {
                finishTest();
                return;
            }

            const question = questions[currentQuestionIndex];
            const progress = ((currentQuestionIndex + 1) / questions.length) * 100;
            
            document.getElementById('progressFill').style.width = progress + '%';
            document.getElementById('progressText').textContent = `‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà ${currentQuestionIndex + 1} ‡∏à‡∏≤‡∏Å ${questions.length}`;
            
            const container = document.getElementById('questionContainer');
            container.innerHTML = `
                <div class="question-card">
                    <div class="question-number">üìù ‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà ${currentQuestionIndex + 1}</div>
                    <div class="question-text">${question.question}</div>
                    <div class="options">
                        ${question.options.map((option, index) => `
                            <div class="option" onclick="selectAnswer(${index})">
                                ${String.fromCharCode(65 + index)}. ${option}
                            </div>
                        `).join('')}
                    </div>
                    <div style="text-align: center; margin-top: 30px;">
                        <button class="btn btn-success" onclick="nextQuestion()" id="nextBtn" disabled>
                            ${currentQuestionIndex === questions.length - 1 ? 'üèÅ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô' : '‚û°Ô∏è ‡∏Ç‡πâ‡∏≠‡∏ñ‡∏±‡∏î‡πÑ‡∏õ'}
                        </button>
                    </div>
                </div>
            `;
        }

        // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö
        function selectAnswer(answerIndex) {
            const options = document.querySelectorAll('.option');
            options.forEach(opt => opt.classList.remove('selected'));
            options[answerIndex].classList.add('selected');
            
            userAnswers[currentQuestionIndex] = answerIndex;
            document.getElementById('nextBtn').disabled = false;
        }

        // ‡∏Ç‡πâ‡∏≠‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
        function nextQuestion() {
            currentQuestionIndex++;
            showQuestion();
        }

        // ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
        function finishTest() {
            // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
            score = 0;
            for (let i = 0; i < questions.length; i++) {
                if (userAnswers[i] === questions[i].correct) {
                    score += 2; // ‡∏Ç‡πâ‡∏≠‡∏•‡∏∞ 2 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
                }
            }

            const testEndTime = new Date();
            const testDuration = Math.round((testEndTime - testStartTime) / 1000 / 60); // ‡∏ô‡∏≤‡∏ó‡∏µ

            // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
            showResults();
            
            // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á Google Sheets
            saveToGoogleSheets(testDuration);
        }

        // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
        function showResults() {
            const percentage = (score / 40) * 100; // ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏ï‡πá‡∏° 40
            let grade, emoji;
            
            if (percentage >= 80) {
                grade = '‡∏¢‡∏≠‡∏î‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°';
                emoji = 'üèÜ';
            } else if (percentage >= 70) {
                grade = '‡∏î‡∏µ‡∏°‡∏≤‡∏Å';
                emoji = 'üåü';
            } else if (percentage >= 60) {
                grade = '‡∏î‡∏µ';
                emoji = 'üëç';
            } else if (percentage >= 50) {
                grade = '‡∏û‡∏≠‡πÉ‡∏ä‡πâ';
                emoji = 'üòä';
            } else {
                grade = '‡∏ï‡πâ‡∏≠‡∏á‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô';
                emoji = 'üí™';
            }

            let resultsHTML = `
                <div class="score-card">
                    <h2>${emoji} ‡∏ú‡∏•‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</h2>
                    <div class="score-number">${score}</div>
                    <p>‡∏à‡∏≤‡∏Å 40 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô (${percentage.toFixed(1)}%)</p>
                    <h3>${grade}</h3>
                </div>
                
                <div class="question-card">
                    <h3>üìã ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö</h3>
            `;

            for (let i = 0; i < questions.length; i++) {
                const question = questions[i];
                const userAnswer = userAnswers[i];
                const isCorrect = userAnswer === question.correct;
                
                resultsHTML += `
                    <div style="margin: 20px 0; padding: 15px; border-radius: 10px; ${isCorrect ? 'background: rgba(0, 184, 148, 0.1); border-left: 5px solid #00b894;' : 'background: rgba(225, 112, 85, 0.1); border-left: 5px solid #e17055;'}">
                        <h4>‡∏Ç‡πâ‡∏≠‡∏ó‡∏µ‡πà ${i + 1}: ${question.question}</h4>
                        <p><strong>‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì:</strong> ${userAnswer !== undefined ? question.options[userAnswer] : '‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏≠‡∏ö'} ${isCorrect ? '‚úÖ' : '‚ùå'}</p>
                        <p><strong>‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å:</strong> ${question.options[question.correct]}</p>
                        <div class="explanation">
                            <h4>üí° ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢</h4>
                            <p>${question.explanation}</p>
                        </div>
                    </div>
                `;
            }

            resultsHTML += `
                </div>
                <div style="text-align: center; margin-top: 30px;">
                    <button class="btn btn-success" onclick="showLogin()">üîÑ ‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÉ‡∏´‡∏°‡πà</button>
                    <button class="btn btn-warning" onclick="showScoreboard()">üìä ‡∏î‡∏π‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô</button>
                </div>
            `;

            document.getElementById('questionContainer').innerHTML = resultsHTML;
        }

        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á Google Sheets ‡∏î‡πâ‡∏ß‡∏¢ JSONP
        function saveToGoogleSheets(duration) {
            Swal.fire({
                title: 'üíæ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...',
                text: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            const data = {
                action: 'saveScore',
                timestamp: new Date().toLocaleString('th-TH', { timeZone: 'Asia/Bangkok' }),
                studentName: currentStudent,
                score: score,
                totalScore: 40,
                percentage: ((score / 40) * 100).toFixed(1),
                duration: duration,
                answers: JSON.stringify(userAnswers)
            };

            // ‡∏™‡∏£‡πâ‡∏≤‡∏á JSONP request
            const callbackName = 'jsonp_callback_' + Math.round(100000 * Math.random());
            
            // ‡∏™‡∏£‡πâ‡∏≤‡∏á script element
            const script = document.createElement('script');
            const params = new URLSearchParams(data).toString();
            script.src = `${APPS_SCRIPT_URL}?${params}&callback=${callbackName}`;
            
            // ‡∏™‡∏£‡πâ‡∏≤‡∏á callback function
            window[callbackName] = function(response) {
                // ‡∏•‡∏ö script element
                document.head.removeChild(script);
                delete window[callbackName];
                
                if (response && response.success) {
                    Swal.fire({
                        icon: 'success',
                        title: '‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!',
                        text: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß',
                        confirmButtonColor: '#00b894'
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
                        text: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á',
                        confirmButtonColor: '#e17055'
                    });
                }
            };
            
            // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ error
            script.onerror = function() {
                document.head.removeChild(script);
                delete window[callbackName];
                
                Swal.fire({
                    icon: 'error',
                    title: '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
                    text: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ',
                    confirmButtonColor: '#e17055'
                });
            };
            
            // ‡πÄ‡∏û‡∏¥‡πà‡∏° script ‡∏•‡∏á‡πÉ‡∏ô head
            document.head.appendChild(script);
        }

        // ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
        function showScoreboard() {
            showSection('scoreboard');
            loadScoreboard();
        }

        // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
        function loadScoreboard() {
            const content = document.getElementById('scoreboardContent');
            content.innerHTML = `
                <div class="loading">
                    <div class="spinner"></div>
                    <p>üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheets...</p>
                </div>
            `;

            // ‡∏™‡∏£‡πâ‡∏≤‡∏á JSONP request ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            const callbackName = 'jsonp_callback_load_' + Math.round(100000 * Math.random());
            
            const script = document.createElement('script');
            script.src = `${APPS_SCRIPT_URL}?action=getScores&callback=${callbackName}`;
            
            window[callbackName] = function(response) {
                document.head.removeChild(script);
                delete window[callbackName];
                
                if (response && response.success && response.data) {
                    displayScoreboard(response.data);
                } else {
                    content.innerHTML = `
                        <div style="text-align: center; padding: 40px;">
                            <h3>‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ</h3>
                            <p>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á</p>
                        </div>
                    `;
                }
            };
            
            script.onerror = function() {
                document.head.removeChild(script);
                delete window[callbackName];
                
                content.innerHTML = `
                    <div style="text-align: center; padding: 40px;">
                        <h3>‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠</h3>
                        <p>‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï</p>
                    </div>
                `;
            };
            
            document.head.appendChild(script);
        }

        // ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
        function displayScoreboard(data) {
            if (!data || data.length === 0) {
                document.getElementById('scoreboardContent').innerHTML = `
                    <div style="text-align: center; padding: 40px;">
                        <h3>üìä ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô</h3>
                        <p>‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏±‡∏ô‡πÄ‡∏ñ‡∏≠‡∏∞!</p>
                    </div>
                `;
                return;
            }

            // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
            data.sort((a, b) => {
                if (b.score !== a.score) return b.score - a.score;
                return new Date(a.timestamp) - new Date(b.timestamp); // ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ï‡∏≤‡∏°‡πÄ‡∏ß‡∏•‡∏≤
            });

            let tableHTML = `
                <table class="scoreboard-table">
                    <thead>
                        <tr>
                            <th>üèÜ ‡∏≠‡∏±‡∏ô‡∏î‡∏±‡∏ö</th>
                            <th>üë§ ‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</th>
                            <th>üìä ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô</th>
                            <th>üìà ‡πÄ‡∏õ‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏ô‡∏ï‡πå</th>
                            <th>‚è±Ô∏è ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ</th>
                            <th>üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥</th>
                        </tr>
                    </thead>
                    <tbody>
            `;

            data.forEach((row, index) => {
                const rank = index + 1;
                let rankBadge;
                
                if (rank === 1) rankBadge = `<span class="rank-badge rank-1">ü•á ${rank}</span>`;
                else if (rank === 2) rankBadge = `<span class="rank-badge rank-2">ü•à ${rank}</span>`;
                else if (rank === 3) rankBadge = `<span class="rank-badge rank-3">ü•â ${rank}</span>`;
                else rankBadge = `<span class="rank-badge rank-other">${rank}</span>`;

                tableHTML += `
                    <tr>
                        <td>${rankBadge}</td>
                        <td>${row.studentName}</td>
                        <td><strong>${row.score}/40</strong></td>
                        <td>${row.percentage}%</td>
                        <td>${row.duration} ‡∏ô‡∏≤‡∏ó‡∏µ</td>
                        <td>${new Date(row.timestamp).toLocaleDateString('th-TH')}</td>
                    </tr>
                `;
            });

            tableHTML += `
                    </tbody>
                </table>
                <div style="text-align: center; margin-top: 20px; color: #667eea;">
                    <p>üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${data.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ | ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: ${new Date().toLocaleString('th-TH')}</p>
                </div>
            `;

            document.getElementById('scoreboardContent').innerHTML = tableHTML;
        }

        // ‡πÅ‡∏™‡∏î‡∏á/‡∏ã‡πà‡∏≠‡∏ô section
        function showSection(section) {
            const sections = ['loginSection', 'testSection', 'scoreboardSection'];
            sections.forEach(s => {
                document.getElementById(s).classList.add('hidden');
            });
            
            if (section === 'login') {
                document.getElementById('loginSection').classList.remove('hidden');
            } else if (section === 'test') {
                document.getElementById('testSection').classList.remove('hidden');
            } else if (section === 'scoreboard') {
                document.getElementById('scoreboardSection').classList.remove('hidden');
            }
        }

        // ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
        function showLogin() {
            showSection('login');
            document.getElementById('studentName').value = '';
        }

        // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
        window.onload = function() {
            showSection('login');
        };
    </script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'992b8df3131545c3',t:'MTc2MTE2Mjk1MC4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body>
</html>
